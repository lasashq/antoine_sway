#color palette

include catppuccin-mocha

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim, if needed
# set $left h
# set $down j
# set $up k
# set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
for_window [app_id="menu"] floating enable, sticky enable, resize set 30 ppt 60 ppt, border pixel 6
set $menu exec ~/.config/sway-launcher-desktop/sway-launcher-desktop.sh

for_window [app_id="AmneziaVPN"] floating enable
### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# NEED TO INSTALL swaybg
output * bg /home/antoine/.config/hypr/space-piano.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### autostart execs
#gtk-theme
exec gsettings set org.gnome.desktop.interface icon-theme Catppuccin-Mocha-Alt2
#bspwm-like layout
exec --no-startup-id ~/.config/sway-alternating-layout/alternating_layouts.py
#audio server
exec pipewire
exec pipewire-pulse
#not to swaylock if audio is played
exec sway-audio-idle-inhibit
#notification daemon
exec mako
#polkit agent
exec systemctl --user start plasma-polkit-agent
## Idle configuration
exec swayidle -w \
          timeout 300 'swaylock -f -c 000000' \
          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### window decorations
gaps inner 7
gaps outer 0
set $gaps 5
set $border_size 3
set $border_size_floating 3

default_border pixel 2
default_floating_border pixel 2
hide_edge_borders smart

# target                    title     bg      text     indicator  border
client.focused              #0a0b16   #2f343f #4477ff  #d58f3f    #fab387
client.urgent               #0a0b16   #2f343f #4477ff  #d83e43    #fab387
client.focused_inactive     #2f343f   #2f343f #d8dee8  #3d3d3d    #585b70
client.unfocused            #2f343f   #2f343f #d8dee8  #3d3d3d    #585b70
gaps outer 1
gaps inner 7
#smart_gaps on


### Input configuration (MUST BE CHANGED, DEPENDS ON YOUR DEVICE)
# touchpad:
  input "10182:480:GXTP7863:00_27C6:01E0" {
      dwt enabled
      tap enabled
      natural_scroll enabled
      middle_emulation enabled
  }
  input "type:keyboard" {
      xkb_layout us,ru
      xkb_variant ,
      xkb_options grp:win_space_toggle
  }
bindgesture swipe:right workspace prev
bindgesture swipe:left workspace next
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym --to-code Ctrl+Alt+t exec $term

    # Kill focused window
    bindsym --to-code $mod+c kill

    # Start your launcher
    bindsym --to-code $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym --to-code $mod+Shift+c reload

#
# Moving around:
#
    # Move your focus around
    # bindsym $mod+$left focus left
    # bindsym $mod+$down focus down
    # bindsym $mod+$up focus up
    # bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]

    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    # bindsym $mod+Shift+$left move left
    # bindsym $mod+Shift+$down move down
    # bindsym $mod+Shift+$up move up
    # bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys

    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    #bindsym $mod+b splith
    focus child
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    # bindsym --to-code $mod+s layout stacking
    bindsym --to-code $mod+w layout tabbed
    bindsym --to-code $mod+j layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+p fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+s floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad windoh or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

bindsym $mod+Ctrl+Left resize shrink width 10px
bindsym $mod+Ctrl+Right resize grow width 10px
bindsym $mod+Ctrl+Up resize grow height 10px
bindsym $mod+Ctrl+Down resize shrink height 10px
# Utilities:
#
    # Special keys to adjust volume via Pipewire
    bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle && swayosd-client --output-volume mute-toggle
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Special key to take a screenshot with grim
    bindsym --to-code $mod+Shift+S exec grim -g "$(slurp -d)" - | wl-copy 

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}

# HOTKEYS
bindsym --to-code $mod+f exec zen-browser
bindsym --to-code $mod+t exec ayugram-desktop
bindsym --to-code $mod+n exec nemo
bindsym --to-code $mod+b exec code
bindsym --to-code $mod+h exec swaylock

include /etc/sway/config.d/*
